-- 1. T·∫°o c∆° s·ªü d·ªØ li·ªáu
CREATE DATABASE IF NOT EXISTS fastfood_store;
USE fastfood_store;

-- 2. B·∫£ng d√≤ng s·∫£n ph·∫©m (productlines)
CREATE TABLE productlines (
    productLine VARCHAR(50) PRIMARY KEY,
    textDescription VARCHAR(4000),
    htmlDescription MEDIUMTEXT,
    image MEDIUMBLOB
);

-- 3. B·∫£ng s·∫£n ph·∫©m (products)
CREATE TABLE products (
    productCode VARCHAR(15) PRIMARY KEY,
    productName VARCHAR(70) NOT NULL,
    productLine VARCHAR(50),
    productVendor VARCHAR(50),
    productDescription TEXT,
    quantityInStock SMALLINT,
    buyPrice DECIMAL(10,2),
    MSRP DECIMAL(10,2),
    image VARCHAR(255),
    FOREIGN KEY (productLine) REFERENCES productlines(productLine)
);

-- 4. B·∫£ng vƒÉn ph√≤ng chi nh√°nh (offices)
CREATE TABLE offices (
    officeCode VARCHAR(10) PRIMARY KEY,
    city VARCHAR(50),
    phone VARCHAR(50),
    addressLine1 VARCHAR(100),
    addressLine2 VARCHAR(100),
    state VARCHAR(50),
    country VARCHAR(50),
    postalCode VARCHAR(15),
    territory VARCHAR(10)
);

-- 5. B·∫£ng nh√¢n vi√™n (employees)
CREATE TABLE employees (
    employeeNumber INT PRIMARY KEY AUTO_INCREMENT,
    lastName VARCHAR(50),
    firstName VARCHAR(50),
    extension VARCHAR(10),
    email VARCHAR(100),
    officeCode VARCHAR(10),
    reportsTo INT,
    jobTitle VARCHAR(50),
    role ENUM('sales', 'admin', 'manager') DEFAULT 'sales',
    FOREIGN KEY (officeCode) REFERENCES offices(officeCode),
    FOREIGN KEY (reportsTo) REFERENCES employees(employeeNumber)
);

-- 6. B·∫£ng kh√°ch h√†ng (customers)
CREATE TABLE customers (
    customerNumber INT PRIMARY KEY AUTO_INCREMENT,
    customerName VARCHAR(50),
    contactLastName VARCHAR(50),
    contactFirstName VARCHAR(50),
    phone VARCHAR(50),
    addressLine1 VARCHAR(100),
    addressLine2 VARCHAR(100),
    city VARCHAR(50),
    state VARCHAR(50),
    postalCode VARCHAR(15),
    country VARCHAR(50),
    salesRepEmployeeNumber INT,
    creditLimit DECIMAL(10,2),
    email VARCHAR(100),
    password VARCHAR(255),
    FOREIGN KEY (salesRepEmployeeNumber) REFERENCES employees(employeeNumber)
);

-- 7. B·∫£ng ƒë∆°n h√†ng (orders)
CREATE TABLE orders (
    orderNumber INT PRIMARY KEY AUTO_INCREMENT,
    orderDate DATE,
    requiredDate DATE,
    shippedDate DATE,
    status ENUM('Processing','Shipped','Delivered','Cancelled') DEFAULT 'Processing',
    comments TEXT,
    customerNumber INT,
    FOREIGN KEY (customerNumber) REFERENCES customers(customerNumber)
);

-- 8. B·∫£ng chi ti·∫øt ƒë∆°n h√†ng (orderdetails)
CREATE TABLE orderdetails (
    orderNumber INT,
    productCode VARCHAR(15),
    quantityOrdered INT,
    priceEach DECIMAL(10,2),
    orderLineNumber SMALLINT,
    PRIMARY KEY (orderNumber, productCode),
    FOREIGN KEY (orderNumber) REFERENCES orders(orderNumber),
    FOREIGN KEY (productCode) REFERENCES products(productCode)
);

-- 9. B·∫£ng thanh to√°n (payments)
CREATE TABLE payments (
    paymentNumber INT PRIMARY KEY AUTO_INCREMENT,
    customerNumber INT,
    paymentMethod ENUM('Bank Transfer', 'Credit Card', 'COD'),
    checkNumber VARCHAR(50),
    paymentDate DATE,
    amount DECIMAL(10,2),
    status ENUM('Pending','Paid','Failed') DEFAULT 'Pending',
    FOREIGN KEY (customerNumber) REFERENCES customers(customerNumber)
);

-- 10. B·∫£ng banner / khuy·∫øn m√£i (system_configs)
CREATE TABLE system_configs (
    configID INT PRIMARY KEY AUTO_INCREMENT,
    bannerImage VARCHAR(255),
    promotionText VARCHAR(255),
    lastUpdated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);




-- D·ªØ li·ªáu APP cho ·ª©ng d·ª•ng b√°n ƒë·ªì ƒÉn nhanh
USE fastfood_store;

-- ==============================
-- ü•ó 1. D√≤ng s·∫£n ph·∫©m (productlines)
-- ==============================
INSERT INTO productlines VALUES
('Burger', 'C√°c lo·∫°i burger ƒë·∫∑c bi·ªát', NULL, NULL),
('Pizza', 'Pizza ph√¥ mai, h·∫£i s·∫£n, x√∫c x√≠ch', NULL, NULL),
('Drinks', 'ƒê·ªì u·ªëng c√≥ gas, n∆∞·ªõc √©p, c√† ph√™', NULL, NULL),
('Snacks', 'Khoai t√¢y chi√™n, g√† r√°n, x√∫c x√≠ch', NULL, NULL),
('Dessert', 'Tr√°ng mi·ªáng kem, b√°nh ng·ªçt, pudding', NULL, NULL);

-- ==============================
-- üçî 2. S·∫£n ph·∫©m (products)
-- ==============================
INSERT INTO products VALUES
('P001', 'Cheese Burger', 'Burger', 'FastFood VN', 'Burger b√≤ ph√¥ mai ƒë·∫∑c bi·ªát', 120, 20000, 35000, 'cheese_burger.jpg'),
('P002', 'Double Beef Burger', 'Burger', 'FastFood VN', 'Burger hai l·ªõp b√≤', 80, 25000, 40000, 'double_burger.jpg'),
('P003', 'Seafood Pizza', 'Pizza', 'PizzaCo', 'Pizza h·∫£i s·∫£n ƒë·∫∑c bi·ªát', 100, 50000, 85000, 'seafood_pizza.jpg'),
('P004', 'Pepperoni Pizza', 'Pizza', 'PizzaCo', 'Pizza x√∫c x√≠ch ti√™u cay', 90, 45000, 80000, 'pepperoni_pizza.jpg'),
('P005', 'Coca Cola', 'Drinks', 'Coca-Cola', 'N∆∞·ªõc ng·ªçt c√≥ gas', 300, 8000, 12000, 'coca.jpg'),
('P006', 'Orange Juice', 'Drinks', 'FruitHouse', 'N∆∞·ªõc cam t∆∞∆°i nguy√™n ch·∫•t', 200, 10000, 18000, 'orange_juice.jpg'),
('P007', 'French Fries', 'Snacks', 'Snacky', 'Khoai t√¢y chi√™n gi√≤n tan', 250, 12000, 20000, 'fries.jpg'),
('P008', 'Fried Chicken', 'Snacks', 'Snacky', 'G√† r√°n cay gi√≤n', 150, 30000, 50000, 'chicken.jpg'),
('P009', 'Chocolate Cake', 'Dessert', 'SweetHome', 'B√°nh socola ph·ªß kem', 60, 40000, 70000, 'cake.jpg'),
('P010', 'Vanilla Ice Cream', 'Dessert', 'SweetHome', 'Kem vani m√°t l·∫°nh', 80, 15000, 25000, 'icecream.jpg');

-- ==============================
-- üè¢ 3. VƒÉn ph√≤ng (offices)
-- ==============================
INSERT INTO offices VALUES
('HCM01', 'H·ªì Ch√≠ Minh', '028123456', '123 L√™ L·ª£i', NULL, 'HCM', 'Vi·ªát Nam', '700000', 'South');

-- ==============================
-- üë©‚Äçüíº 4. Nh√¢n vi√™n (employees)
-- ==============================
INSERT INTO employees (lastName, firstName, email, officeCode, jobTitle, role) VALUES
('Nguyen', 'Lan', 'lan@fastfood.vn', 'HCM01', 'Sales Rep', 'sales'),
('Tran', 'Minh', 'minh@fastfood.vn', 'HCM01', 'Sales Rep', 'sales'),
('Le', 'Huy', 'huy@fastfood.vn', 'HCM01', 'Manager', 'manager'),
('Pham', 'Tuan', 'tuan@fastfood.vn', 'HCM01', 'Admin', 'admin'),
('Bui', 'Khanh', 'khanh@fastfood.vn', 'HCM01', 'Sales Rep', 'sales'),
('Do', 'Nga', 'nga@fastfood.vn', 'HCM01', 'Sales Rep', 'sales'),
('Vu', 'Hoa', 'hoa@fastfood.vn', 'HCM01', 'Sales Rep', 'sales'),
('Hoang', 'Dat', 'dat@fastfood.vn', 'HCM01', 'Sales Rep', 'sales'),
('Dang', 'Linh', 'linh@fastfood.vn', 'HCM01', 'Sales Rep', 'sales'),
('Nguyen', 'Long', 'long@fastfood.vn', 'HCM01', 'Admin', 'admin');

-- ==============================
-- üßç‚Äç‚ôÇÔ∏è 5. Kh√°ch h√†ng (customers)
-- ==============================
INSERT INTO customers (customerName, contactLastName, contactFirstName, phone, addressLine1, city, country, email, password, salesRepEmployeeNumber) VALUES
('Ph·∫°m VƒÉn A', 'Ph·∫°m', 'VƒÉn A', '0901111111', '12 Nguy·ªÖn Hu·ªá', 'HCM', 'Vi·ªát Nam', 'a@gmail.com', '123456', 1),
('Tr·∫ßn Th·ªã B', 'Tr·∫ßn', 'Th·ªã B', '0902222222', '23 L√™ L·ª£i', 'HCM', 'Vi·ªát Nam', 'b@gmail.com', '123456', 2),
('L√™ VƒÉn C', 'L√™', 'VƒÉn C', '0903333333', '45 Tr·∫ßn Ph√∫', 'HCM', 'Vi·ªát Nam', 'c@gmail.com', '123456', 3),
('Nguy·ªÖn Th·ªã D', 'Nguy·ªÖn', 'Th·ªã D', '0904444444', '56 L√Ω Th∆∞·ªùng Ki·ªát', 'HCM', 'Vi·ªát Nam', 'd@gmail.com', '123456', 4),
('Phan VƒÉn E', 'Phan', 'VƒÉn E', '0905555555', '67 Nguy·ªÖn Tr√£i', 'HCM', 'Vi·ªát Nam', 'e@gmail.com', '123456', 5),
('B√πi Th·ªã F', 'B√πi', 'Th·ªã F', '0906666666', '78 Hai B√† Tr∆∞ng', 'HCM', 'Vi·ªát Nam', 'f@gmail.com', '123456', 6),
('Ho√†ng VƒÉn G', 'Ho√†ng', 'VƒÉn G', '0907777777', '89 Pasteur', 'HCM', 'Vi·ªát Nam', 'g@gmail.com', '123456', 7),
('V≈© Th·ªã H', 'V≈©', 'Th·ªã H', '0908888888', '90 L√™ Th√°nh T√¥n', 'HCM', 'Vi·ªát Nam', 'h@gmail.com', '123456', 8),
('ƒê·ªó VƒÉn I', 'ƒê·ªó', 'VƒÉn I', '0909999999', '91 Nguy·ªÖn VƒÉn C·ª´', 'HCM', 'Vi·ªát Nam', 'i@gmail.com', '123456', 9),
('Tr·ªãnh Th·ªã J', 'Tr·ªãnh', 'Th·ªã J', '0910000000', '92 ƒêi·ªán Bi√™n Ph·ªß', 'HCM', 'Vi·ªát Nam', 'j@gmail.com', '123456', 10);

-- ==============================
-- üì¶ 6. ƒê∆°n h√†ng (orders)
-- ==============================
INSERT INTO orders (orderDate, requiredDate, shippedDate, status, comments, customerNumber) VALUES
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 3 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 1),
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 2 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 2),
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 4 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 3),
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 1 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 4),
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 5 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 5),
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 3 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 6),
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 2 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 7),
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 1 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 8),
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 4 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 9),
(CURDATE(), DATE_ADD(CURDATE(), INTERVAL 3 DAY), NULL, 'Processing', 'ƒê∆°n h√†ng ƒëang x·ª≠ l√Ω', 10);

-- ==============================
-- üçü 7. Chi ti·∫øt ƒë∆°n h√†ng (orderdetails)
-- ==============================
INSERT INTO orderdetails VALUES
(1, 'P001', 2, 35000, 1),
(2, 'P003', 1, 85000, 1),
(3, 'P007', 3, 20000, 1),
(4, 'P004', 2, 80000, 1),
(5, 'P002', 1, 40000, 1),
(6, 'P009', 1, 70000, 1),
(7, 'P005', 4, 12000, 1),
(8, 'P006', 2, 18000, 1),
(9, 'P010', 2, 25000, 1),
(10, 'P008', 1, 50000, 1);

-- ==============================
-- üí≥ 8. Thanh to√°n (payments)
-- ==============================
INSERT INTO payments (customerNumber, paymentMethod, checkNumber, paymentDate, amount, status) VALUES
(1, 'COD', 'CHK001', CURDATE(), 70000, 'Paid'),
(2, 'Credit Card', 'CHK002', CURDATE(), 85000, 'Paid'),
(3, 'Bank Transfer', 'CHK003', CURDATE(), 60000, 'Pending'),
(4, 'COD', 'CHK004', CURDATE(), 160000, 'Paid'),
(5, 'Credit Card', 'CHK005', CURDATE(), 40000, 'Paid'),
(6, 'COD', 'CHK006', CURDATE(), 70000, 'Pending'),
(7, 'Bank Transfer', 'CHK007', CURDATE(), 48000, 'Paid'),
(8, 'COD', 'CHK008', CURDATE(), 36000, 'Paid'),
(9, 'Credit Card', 'CHK009', CURDATE(), 50000, 'Pending'),
(10, 'Bank Transfer', 'CHK010', CURDATE(), 90000, 'Paid');

